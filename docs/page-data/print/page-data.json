{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/print","webpackCompilationHash":"1d3e9ce7418dba43ce45","result":{"data":{"deck":{"id":"369025ef-a512-5584-9dcc-c6cdccae4bd4","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = deckTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Styles, {\n    mdxType: \"Styles\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(ImageSplit, {\n    title: \"Do you remember?\",\n    image: \"//localhost:8008/assets/bicycle-first-try.gif\",\n    mdxType: \"ImageSplit\"\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"After a While\"), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"img\", {\n    src: \"//localhost:8008/assets/bicycle-perfect.gif\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"padding\": \"40px\"\n    }\n  }), mdx(\"hr\", null), mdx(CycleFlowDiagram, {\n    mdxType: \"CycleFlowDiagram\"\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"About Me\"), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(AboutMe, {\n    mdxType: \"AboutMe\"\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"backgroundSize\": \"contain\",\n      \"backgroundPosition\": \"50% 50%\",\n      \"backgroundRepeat\": \"no-repeat\",\n      \"backgroundImage\": \"url('//localhost:8008/assets/tag-cloud.png')\"\n    }\n  }), mdx(\"hr\", null), mdx(Quote, {\n    mdxType: \"Quote\"\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(Styles, {\n    mdxType: \"Styles\"\n  }), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"Have you ever \", mdx(\"span\", {\n    className: \"primary\",\n    style: {\n      \"display\": \"block\"\n    }\n  }, \"learned\"), \" a foreign language?\"), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(Table, {\n    titleLeft: \"German\",\n    titleRight: \"English\",\n    data: [[\"Hallo\", \"hello\"], [\"Banane\", \"banana\"], [\"Code\", \"code\"], [\"Kindergarten\", \"kindergarten\"], [\"Ohrwurm\", \"???\", \"ear worm\"], [\"Dreikäsehoch\", \"???\", \"three cheese high\"]],\n    mdxType: \"Table\"\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(Table, {\n    titleLeft: \"Reactive\",\n    titleRight: \"Imperative\",\n    data: [[\"first\", \"array[0]\"], [\"toArray\", \"[...array]\"], [\"filter\", \"filter\"], [\"map\", \"map\"], [\"windowToggle\", \"¯\\\\_(ツ)_/¯\", \"???\"], [\"dematerialize\", \"¯\\\\_(ツ)_/¯\", \"???\"]],\n    mdxType: \"Table\"\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(Styles, {\n    mdxType: \"Styles\"\n  }), mdx(Text, {\n    mdxType: \"Text\"\n  }, \"Thinking \", mdx(\"span\", {\n    className: \"primary\"\n  }, \"reactively\"), \" needs practice!\"), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Live Coding Time\"), mdx(\"img\", {\n    src: \"//localhost:8008/assets/live-coding.gif\",\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"paddingLeft\": \"4em\",\n      \"paddingRight\": \"4em\",\n      \"paddingBottom\": \"2em\"\n    }\n  }), mdx(\"hr\", null), mdx(WebComponent, {\n    mdxType: \"WebComponent\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Summary of live coding\"), mdx(\"hr\", null), mdx(\"h1\", null, \"What about V7 and beyond\"), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\",\n      \"backgroundSize\": \"cover\",\n      \"backgroundPosition\": \"50% 50%\",\n      \"backgroundRepeat\": \"no-repeat\",\n      \"backgroundImage\": \"url('//localhost:8008/assets/rxjs7.png')\"\n    }\n  }), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: vsDarkReal,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"1:8 file=./code/typing-example.ts title=\\\"Improved Typings\\\"\",\n    \"1:8\": true,\n    \"file\": \"./code/typing-example.ts\",\n    \"title\": \"\\\"Improved\",\n    \"Typings\\\"\": true\n  }), \"import { timer, of, concat } from \\\"rxjs\\\";\\nimport { switchMap, reduce, filter } from 'rxjs/operators';\\n\\nconst isOnline = window.navigator.onLine;\\n\\nconst obs$ = timer(0, 1000).pipe(\\n    switchMap(() => isOnline ? of(1): of('2') )\\n)\\n/** \\n * RxJS <  7: obs$: Observable<{}>;\\n * RxJS >= 7: obs$: Observable<string | number>;\\n */\\n\\nconst concatObs$ = concat(of(1), of('a'), of(2), of(true), of(3), of([1, 2, 3]), of(4)); \\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<string | number | boolean | number[]>\\n */ \\n\\nconst source = of(1, 2, 3).pipe(reduce((a: any, v) => '' + v));\\n/** \\n * RxJS <  7: Observable<any>\\n * RxJS >= 7: Observable<string>\\n */ \\n\\nconst filter$ = of(0, 1, 2).pipe(filter(Boolean));\\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<number>\\n */\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"6:12 file=./code/typing-example.ts title=\\\"Proper Type Inference for generator functions\\\"\",\n    \"6:12\": true,\n    \"file\": \"./code/typing-example.ts\",\n    \"title\": \"\\\"Proper\",\n    \"Type\": true,\n    \"Inference\": true,\n    \"for\": true,\n    \"generator\": true,\n    \"functions\\\"\": true\n  }), \"import { timer, of, concat } from \\\"rxjs\\\";\\nimport { switchMap, reduce, filter } from 'rxjs/operators';\\n\\nconst isOnline = window.navigator.onLine;\\n\\nconst obs$ = timer(0, 1000).pipe(\\n    switchMap(() => isOnline ? of(1): of('2') )\\n)\\n/** \\n * RxJS <  7: obs$: Observable<{}>;\\n * RxJS >= 7: obs$: Observable<string | number>;\\n */\\n\\nconst concatObs$ = concat(of(1), of('a'), of(2), of(true), of(3), of([1, 2, 3]), of(4)); \\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<string | number | boolean | number[]>\\n */ \\n\\nconst source = of(1, 2, 3).pipe(reduce((a: any, v) => '' + v));\\n/** \\n * RxJS <  7: Observable<any>\\n * RxJS >= 7: Observable<string>\\n */ \\n\\nconst filter$ = of(0, 1, 2).pipe(filter(Boolean));\\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<number>\\n */\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"14:18 file=./code/typing-example.ts title=\\\"Improved Typings for concat Operator\\\"\",\n    \"14:18\": true,\n    \"file\": \"./code/typing-example.ts\",\n    \"title\": \"\\\"Improved\",\n    \"Typings\": true,\n    \"for\": true,\n    \"concat\": true,\n    \"Operator\\\"\": true\n  }), \"import { timer, of, concat } from \\\"rxjs\\\";\\nimport { switchMap, reduce, filter } from 'rxjs/operators';\\n\\nconst isOnline = window.navigator.onLine;\\n\\nconst obs$ = timer(0, 1000).pipe(\\n    switchMap(() => isOnline ? of(1): of('2') )\\n)\\n/** \\n * RxJS <  7: obs$: Observable<{}>;\\n * RxJS >= 7: obs$: Observable<string | number>;\\n */\\n\\nconst concatObs$ = concat(of(1), of('a'), of(2), of(true), of(3), of([1, 2, 3]), of(4)); \\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<string | number | boolean | number[]>\\n */ \\n\\nconst source = of(1, 2, 3).pipe(reduce((a: any, v) => '' + v));\\n/** \\n * RxJS <  7: Observable<any>\\n * RxJS >= 7: Observable<string>\\n */ \\n\\nconst filter$ = of(0, 1, 2).pipe(filter(Boolean));\\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<number>\\n */\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"20:24 file=./code/typing-example.ts title=\\\"Improved Typings for reduce and scan Operator\\\"\",\n    \"20:24\": true,\n    \"file\": \"./code/typing-example.ts\",\n    \"title\": \"\\\"Improved\",\n    \"Typings\": true,\n    \"for\": true,\n    \"reduce\": true,\n    \"and\": true,\n    \"scan\": true,\n    \"Operator\\\"\": true\n  }), \"import { timer, of, concat } from \\\"rxjs\\\";\\nimport { switchMap, reduce, filter } from 'rxjs/operators';\\n\\nconst isOnline = window.navigator.onLine;\\n\\nconst obs$ = timer(0, 1000).pipe(\\n    switchMap(() => isOnline ? of(1): of('2') )\\n)\\n/** \\n * RxJS <  7: obs$: Observable<{}>;\\n * RxJS >= 7: obs$: Observable<string | number>;\\n */\\n\\nconst concatObs$ = concat(of(1), of('a'), of(2), of(true), of(3), of([1, 2, 3]), of(4)); \\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<string | number | boolean | number[]>\\n */ \\n\\nconst source = of(1, 2, 3).pipe(reduce((a: any, v) => '' + v));\\n/** \\n * RxJS <  7: Observable<any>\\n * RxJS >= 7: Observable<string>\\n */ \\n\\nconst filter$ = of(0, 1, 2).pipe(filter(Boolean));\\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<number>\\n */\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"26:30 file=./code/typing-example.ts title=\\\"Properly infer Type with Boolean constructor\\\"\",\n    \"26:30\": true,\n    \"file\": \"./code/typing-example.ts\",\n    \"title\": \"\\\"Properly\",\n    \"infer\": true,\n    \"Type\": true,\n    \"with\": true,\n    \"Boolean\": true,\n    \"constructor\\\"\": true\n  }), \"import { timer, of, concat } from \\\"rxjs\\\";\\nimport { switchMap, reduce, filter } from 'rxjs/operators';\\n\\nconst isOnline = window.navigator.onLine;\\n\\nconst obs$ = timer(0, 1000).pipe(\\n    switchMap(() => isOnline ? of(1): of('2') )\\n)\\n/** \\n * RxJS <  7: obs$: Observable<{}>;\\n * RxJS >= 7: obs$: Observable<string | number>;\\n */\\n\\nconst concatObs$ = concat(of(1), of('a'), of(2), of(true), of(3), of([1, 2, 3]), of(4)); \\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<string | number | boolean | number[]>\\n */ \\n\\nconst source = of(1, 2, 3).pipe(reduce((a: any, v) => '' + v));\\n/** \\n * RxJS <  7: Observable<any>\\n * RxJS >= 7: Observable<string>\\n */ \\n\\nconst filter$ = of(0, 1, 2).pipe(filter(Boolean));\\n/** \\n * RxJS <  7: Observable<unknown>\\n * RxJS >= 7: Observable<number>\\n */\\n\"))), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(CodeSurfer, {\n    theme: vsDarkReal,\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"2:5 file=./code/animation-frame-example.ts title=\\\"AnimationFrame Observable\\\"\",\n    \"2:5\": true,\n    \"file\": \"./code/animation-frame-example.ts\",\n    \"title\": \"\\\"AnimationFrame\",\n    \"Observable\\\"\": true\n  }), \"import { map, takeWhile, endWith } from 'rxjs/operators';\\nimport { animationFrames } from 'rxjs';\\n\\n// Log the elapsed milliseconds at each animation frame.\\nanimationFrames().subscribe(elapsed => console.log(elapsed));\\n\\nexport function tween(start: number, end: number, duration: number) {\\n    const diff = end - start;\\n    return animationFrames().pipe(\\n        // Figure out what percentage of time has passed\\n        map(elapsed => elapsed / duration),\\n        // Take the vector while less than 100%\\n        takeWhile(v => v < 1),\\n        // Finish with 100%\\n        endWith(1),\\n        // Calculate the distance traveled between start and end\\n        map(v => v * diff + start)\\n    );\\n}\\n\\n// Setup a div for us to move around\\nconst div = document.createElement('div');\\ndocument.body.appendChild(div);\\ndiv.style.position = 'absolute';\\ndiv.style.width = '40px';\\ndiv.style.height = '40px';\\ndiv.style.backgroundColor = 'lime';\\ndiv.style.transform = 'translate3d(10px, 0, 0)';\\n\\ntween(10, 400, 4000).subscribe(x => {\\n    div.style.transform = `translate3d(${x}px, 0, 0)`;\\n});\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"7:19 file=./code/animation-frame-example.ts title=\\\"Use for smooth animations\\\"\",\n    \"7:19\": true,\n    \"file\": \"./code/animation-frame-example.ts\",\n    \"title\": \"\\\"Use\",\n    \"for\": true,\n    \"smooth\": true,\n    \"animations\\\"\": true\n  }), \"import { map, takeWhile, endWith } from 'rxjs/operators';\\nimport { animationFrames } from 'rxjs';\\n\\n// Log the elapsed milliseconds at each animation frame.\\nanimationFrames().subscribe(elapsed => console.log(elapsed));\\n\\nexport function tween(start: number, end: number, duration: number) {\\n    const diff = end - start;\\n    return animationFrames().pipe(\\n        // Figure out what percentage of time has passed\\n        map(elapsed => elapsed / duration),\\n        // Take the vector while less than 100%\\n        takeWhile(v => v < 1),\\n        // Finish with 100%\\n        endWith(1),\\n        // Calculate the distance traveled between start and end\\n        map(v => v * diff + start)\\n    );\\n}\\n\\n// Setup a div for us to move around\\nconst div = document.createElement('div');\\ndocument.body.appendChild(div);\\ndiv.style.position = 'absolute';\\ndiv.style.width = '40px';\\ndiv.style.height = '40px';\\ndiv.style.backgroundColor = 'lime';\\ndiv.style.transform = 'translate3d(10px, 0, 0)';\\n\\ntween(10, 400, 4000).subscribe(x => {\\n    div.style.transform = `translate3d(${x}px, 0, 0)`;\\n});\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"21:28 file=./code/animation-frame-example.ts title=\\\"Place Element\\\"\",\n    \"21:28\": true,\n    \"file\": \"./code/animation-frame-example.ts\",\n    \"title\": \"\\\"Place\",\n    \"Element\\\"\": true\n  }), \"import { map, takeWhile, endWith } from 'rxjs/operators';\\nimport { animationFrames } from 'rxjs';\\n\\n// Log the elapsed milliseconds at each animation frame.\\nanimationFrames().subscribe(elapsed => console.log(elapsed));\\n\\nexport function tween(start: number, end: number, duration: number) {\\n    const diff = end - start;\\n    return animationFrames().pipe(\\n        // Figure out what percentage of time has passed\\n        map(elapsed => elapsed / duration),\\n        // Take the vector while less than 100%\\n        takeWhile(v => v < 1),\\n        // Finish with 100%\\n        endWith(1),\\n        // Calculate the distance traveled between start and end\\n        map(v => v * diff + start)\\n    );\\n}\\n\\n// Setup a div for us to move around\\nconst div = document.createElement('div');\\ndocument.body.appendChild(div);\\ndiv.style.position = 'absolute';\\ndiv.style.width = '40px';\\ndiv.style.height = '40px';\\ndiv.style.backgroundColor = 'lime';\\ndiv.style.transform = 'translate3d(10px, 0, 0)';\\n\\ntween(10, 400, 4000).subscribe(x => {\\n    div.style.transform = `translate3d(${x}px, 0, 0)`;\\n});\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\",\n    \"metastring\": \"30:32 file=./code/animation-frame-example.ts title=\\\"Let it animate\\\"\",\n    \"30:32\": true,\n    \"file\": \"./code/animation-frame-example.ts\",\n    \"title\": \"\\\"Let\",\n    \"it\": true,\n    \"animate\\\"\": true\n  }), \"import { map, takeWhile, endWith } from 'rxjs/operators';\\nimport { animationFrames } from 'rxjs';\\n\\n// Log the elapsed milliseconds at each animation frame.\\nanimationFrames().subscribe(elapsed => console.log(elapsed));\\n\\nexport function tween(start: number, end: number, duration: number) {\\n    const diff = end - start;\\n    return animationFrames().pipe(\\n        // Figure out what percentage of time has passed\\n        map(elapsed => elapsed / duration),\\n        // Take the vector while less than 100%\\n        takeWhile(v => v < 1),\\n        // Finish with 100%\\n        endWith(1),\\n        // Calculate the distance traveled between start and end\\n        map(v => v * diff + start)\\n    );\\n}\\n\\n// Setup a div for us to move around\\nconst div = document.createElement('div');\\ndocument.body.appendChild(div);\\ndiv.style.position = 'absolute';\\ndiv.style.width = '40px';\\ndiv.style.height = '40px';\\ndiv.style.backgroundColor = 'lime';\\ndiv.style.transform = 'translate3d(10px, 0, 0)';\\n\\ntween(10, 400, 4000).subscribe(x => {\\n    div.style.transform = `translate3d(${x}px, 0, 0)`;\\n});\\n\"))), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"div\", {\n    style: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\",\n      \"height\": \"100%\",\n      \"alignItems\": \"center\"\n    }\n  }, mdx(\"h1\", null, \" Show it to me\"), mdx(AnimationFrameExample, {\n    mdxType: \"AnimationFrameExample\"\n  })), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(TextSplit, {\n    image: \"//localhost:8008/assets/practice.gif\",\n    mdxType: \"TextSplit\"\n  }, mdx(\"h1\", null, \" Practice with ... \"), mdx(\"ul\", null, mdx(\"li\", null, \" Redo the same \"), mdx(\"li\", null, \" Drag N' Drop \"), mdx(\"li\", null, \" Typeahead Search \"), mdx(\"li\", null, \" Longpolling \"))), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Thanks a lot for having me\"), mdx(Footer, {\n    mdxType: \"Footer\"\n  }), mdx(\"hr\", null));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"369025ef-a512-5584-9dcc-c6cdccae4bd4","slug":"","title":"After a While"}}}